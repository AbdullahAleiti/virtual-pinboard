{"version":3,"sources":["components/Note.module.css","components/Board.module.css","sounds/dart-sound.mp3","components/Note.tsx","components/Modal.tsx","components/Board.tsx","App.tsx","index.tsx"],"names":["module","exports","Note","color","text","top","left","opacity","rotation","onMouseHover","id","onClick","calculatedLeft","noteWidth","calculatedTop","Fragment","className","Styles","note","style","backgroundColor","transform","onMouseOver","e","onMouseLeave","undefined","header","pin","modalStyle","position","width","buttonStyle","padding","fontSize","Modal","children","open","close","ReactDOM","createPortal","document","getElementById","noteColors","Board","useState","notes","setNotes","selectedNote","setSelectedNote","setId","noteUnderMouse","setNoteUnderMouse","x","y","mouseCOR","setMouseCOR","wheel","setWheel","modalIsOpen","setIsOpen","clickedNote","setClickedNote","textArea","useRef","useSound","require","volume","play","mouseHandler","clientX","clientY","cssNotePosition","selectNote","addNote2Board","notesProp","openEditor","deleteNote","newNotes","filter","useEffect","window","addEventListener","find","current","value","useHotkeys","styles","board","onWheel","deltaY","map","i","key","oldNote","inputText","ref","text_editor","zIndex","App","render"],"mappings":"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","file":"static/js/main.10fd63b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__37-58\",\"header\":\"Note_header__2q-iG\",\"pin\":\"Note_pin__1UrV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__2K04l\",\"text_editor\":\"Board_text_editor__2faDP\"};","module.exports = __webpack_public_path__ + \"static/media/dart-sound.f2d77bcb.mp3\";","import React,{useState} from 'react'\r\nimport Styles from './Note.module.css'\r\n\r\nconst noteWidth = 180;\r\n\r\nexport interface NoteProps {\r\n    id  ?: number,\r\n    color: string,\r\n    top: number,\r\n    left: number,\r\n    text ?: string,\r\n    opacity ?: number,\r\n    rotation?: number,\r\n    zIndex ?: number,\r\n    onMouseHover?: Function,\r\n    onClick ?: any\r\n}\r\n\r\nconst Note: React.FC<NoteProps> = ({color,text,top,left,opacity,rotation,onMouseHover,id,onClick}) => {\r\n    let calculatedLeft : number = left - noteWidth/2;\r\n    let calculatedTop  : number = top  - 20;\r\n    return(\r\n        <React.Fragment>\r\n            <div className={Styles.note} onClick={()=>onClick?.(id)}\r\n                style={{backgroundColor:color,top:calculatedTop,\r\n                left:calculatedLeft,opacity,transform:`rotate(${rotation}deg)`}}\r\n                onMouseOver={(e)=>onMouseHover?.(id)} onMouseLeave={(e)=>onMouseHover?.(undefined)}>\r\n                <div className={Styles.header}><div className={id ? Styles.pin : \"\"}></div></div>\r\n                {text}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Note","import React, { CSSProperties } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst modalStyle : CSSProperties = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"25%\",\r\n    transform: \"translate(-50%, -50%)\"\r\n}\r\n\r\nconst buttonStyle : CSSProperties = {\r\n    padding: \"1em\",\r\n    fontSize: \"1em\"\r\n}\r\n\r\nexport interface Props {\r\n    children : any\r\n    open : boolean\r\n    close: any\r\n}\r\n\r\nconst Modal = ({children,open,close}:Props) => {\r\n    if(!open) return null\r\n\r\n    return ReactDOM.createPortal(\r\n        <div style={modalStyle}>\r\n            {children}\r\n            <button onClick={close} style={buttonStyle}>close</button>\r\n        </div>\r\n    ,document.getElementById(\"portal\")!)\r\n}\r\n\r\nexport default Modal\r\n","import React,{ useState , useRef, useEffect , WheelEvent} from 'react'\r\nimport styles from './Board.module.css'\r\nimport {useHotkeys} from 'react-hotkeys-hook'\r\nimport Note,{NoteProps} from './Note'\r\nimport Modal from './Modal'\r\nimport useSound from 'use-sound'\r\n\r\nconst noteColors = {\r\n    yellow : \"#F7DC6F\",\r\n    green  : \"#82E0AA\",\r\n    red    : \"#F1948A\",\r\n    blue   : \"#7FB3D5\"\r\n}\r\n\r\nconst Board = () => {\r\n    const [notes,setNotes] = useState<ReadonlyArray<NoteProps>>([])\r\n    const [selectedNote,setSelectedNote] = useState<NoteProps | null>()\r\n    const [id,setId] = useState(1)\r\n    const [noteUnderMouse,setNoteUnderMouse] = useState<number |undefined>(undefined)\r\n    const [mouseCOR,setMouseCOR] = useState({x:0,y:0})\r\n    const [wheel,setWheel] = useState(0)\r\n    const [modalIsOpen,setIsOpen] = useState(false)\r\n    const [clickedNote,setClickedNote] = useState<number>()\r\n    const textArea = useRef<any>()\r\n    const [play] = useSound(require('../sounds/dart-sound.mp3'),{volume:0.75})\r\n    \r\n    const mouseHandler = (e : MouseEvent) => \r\n        { setMouseCOR({x:e.clientX,y:e.clientY}) }\r\n\r\n    const wheelHandler = (e : WheelEvent) => \r\n    {\r\n        if (e.deltaY > 0)\r\n            setWheel(wheel+10)\r\n        else if (e.deltaY <0)\r\n            setWheel(wheel-10)\r\n    }\r\n\r\n    const cssNotePosition = {left:mouseCOR.x,top:mouseCOR.y,rotation:wheel}\r\n\r\n    const selectNote = (color : string) => setSelectedNote({color,...cssNotePosition})\r\n\r\n    const addNote2Board = (e : any,notesProp ?: any,note ?: NoteProps)=>{\r\n        if(note) \r\n        {\r\n            setNotes([...notesProp,  note])\r\n            return\r\n        }\r\n\r\n        if(selectedNote) \r\n        {\r\n            setNotes([...notes,  {...selectedNote,...cssNotePosition,id}])\r\n            play()\r\n            openEditor(id)\r\n            setSelectedNote(null)\r\n            setId(id+1)\r\n            setWheel(0)\r\n        }\r\n    }\r\n\r\n    const deleteNote = (id ?: number)=>{\r\n        const newNotes = notes.filter((Note)=>{\r\n            if(id)\r\n                return Note.id !== id\r\n            return Note.id !== noteUnderMouse\r\n        })\r\n        if(id) return newNotes\r\n        setNotes(newNotes)\r\n    }\r\n\r\n    const openEditor = (id : number) => {\r\n        setIsOpen(true)\r\n        setClickedNote(id)\r\n    }\r\n\r\n    const closeEditor= () => {\r\n        setIsOpen(false)\r\n        const oldNote = notes.find((note)=> {return note.id === clickedNote})\r\n        const newNotes = deleteNote(clickedNote)\r\n        const inputText = textArea?.current?.value\r\n        addNote2Board(null,newNotes,{...oldNote!,text:inputText})\r\n    }\r\n\r\n    useEffect(()=>{ window.addEventListener(\"mousemove\",mouseHandler) },[])\r\n\r\n    useEffect(()=>{\r\n        const note = notes.find((note)=>{return note.id === clickedNote})\r\n        textArea.current && (textArea.current.value = note?.text ||\"\")\r\n    },[clickedNote,notes,modalIsOpen])\r\n    \r\n    useHotkeys(\"y\",()=>{ selectNote(noteColors.yellow) },[id,mouseCOR])\r\n\r\n    useHotkeys(\"g\",()=>{ selectNote(noteColors.green) },[id,mouseCOR])\r\n\r\n    useHotkeys(\"r\",()=>{ selectNote(noteColors.red) },[id,mouseCOR])\r\n\r\n    useHotkeys(\"b\",()=>{ selectNote(noteColors.blue) },[id,mouseCOR])\r\n\r\n    useHotkeys(\"esc\",()=>{ setSelectedNote(null) })\r\n\r\n    useHotkeys(\"d,delete\",()=>{ deleteNote() },[noteUnderMouse])\r\n\r\n    return (\r\n        <div className={styles.board} onClick={addNote2Board} onWheel={wheelHandler}>\r\n            {notes.map((note,i)=>{\r\n                return(\r\n                    <Note {...note} key={i} onMouseHover={setNoteUnderMouse} onClick={openEditor}/>\r\n                )\r\n            })}\r\n            {selectedNote && <Note {...selectedNote} {...cssNotePosition} opacity={0.25} />}\r\n            <Modal open={modalIsOpen} close={closeEditor}>\r\n                <textarea ref={textArea} className={styles.text_editor} style={{zIndex:1000}}></textarea>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\nimport Board from './components/Board'\r\nimport './App.css'\r\n\r\nconst App : React.FC = () => <Board/>\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}